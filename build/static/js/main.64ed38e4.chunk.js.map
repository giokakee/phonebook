{"version":3,"sources":["requests/loginUser.js","reducers/userLogined.js","components/loginForm.js","requests/register.js","reducers/messageReducer.js","components/registerForm.js","requests/contactRequests.js","reducers/contactsReducer.js","components/addContactForm.js","components/contacts.js","App.js","reportWebVitals.js","store.js","index.js"],"names":["loginUser","a","username","password","token","axios","post","data","dispatchLogin","dispatch","type","message","setTimeout","user","state","action","window","localStorage","setItem","JSON","stringify","removeItem","mapDispatchToProps","connect","messageReducer","useState","setUsername","setPassword","navigate","useNavigate","login","e","preventDefault","className","onSubmit","value","onChange","target","required","htmlFor","onClick","registerUser","setMessage","confPassword","setConfPassword","register","console","log","autoComplete","name","url","getAllContact","addContact","number","deleteRequest","id","delete","editRequest","contactsReducer","updatedContact","map","mp","filter","f","add","setName","setNumber","userFromStorege","parse","getItem","resultName","match","init","deleteContact","editContact","newContact","succed","contacts","search","setSearch","edit","setEdit","useEffect","contactsToShow","length","indexOf","String","style","marginBottom","display","justifyContent","marginTop","editFunc","cursor","mapDispatchToPtops","dispatchLogout","userFromStorage","color","float","marginRight","path","element","forMessage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64ed38e4.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\n\r\nconst url ='/user/login'\r\nexport const loginUser = async ({username, password, token}) => {\r\n    let {data} = await axios.post(url, {username, password, token}) \r\n    return data\r\n}\r\n\r\n\r\n\r\n// const baseUrl = 'http://localhost:3001/user/login'\r\n// export const loginUser = async ({username, password, token}) => {\r\n//     let {data} = await axios.post(baseUrl, {username, password, token}) \r\n//     return data\r\n// }","import { loginUser } from \"../requests/loginUser\"\r\n\r\nconst user = (state = false, action) => {\r\n    switch(action.type){\r\n        case 'LOGIN':\r\n            if(!action.data){\r\n              window.localStorage.removeItem('user')\r\n            return false\r\n        }\r\n              window.localStorage.setItem('user', JSON.stringify(action.data))\r\n            return true\r\n        case 'LOGOUT':           \r\n            window.localStorage.removeItem('user')\r\n            return false\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const dispatchLogin = ({username,password, token}) => {\r\n    return async (dispatch) => {\r\n        let data = await loginUser({username,password, token})\r\n       if(!data){\r\n           dispatch({\r\n               type:'SETMESSAGE',\r\n               message:'Wrong username or password'\r\n           })\r\n           setTimeout(() => {\r\n            dispatch({\r\n                type:'SETMESSAGE',\r\n                message:''\r\n            })\r\n           }, 5000)\r\n       }\r\n        dispatch({\r\n            type: 'LOGIN',\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nexport const dispatchLogout = () => {\r\n    return  (dispatch) => {\r\n        dispatch({\r\n            type: 'LOGOUT'\r\n        })\r\n    }\r\n} \r\n\r\nexport default user","import './loginForm.css'\r\nimport { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { dispatchLogin } from '../reducers/userLogined'\r\nimport { connect } from 'react-redux'\r\n\r\n\r\nconst LoginForm = ({dispatchLogin, user}) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const navigate = useNavigate()\r\n    \r\n    const login = async (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatchLogin({username,password})\r\n\r\n    navigate('/')\r\n    setUsername('')\r\n    setPassword('')\r\n}\r\n\r\n    return(\r\n        <div className='login'>\r\n            <h1>Login</h1>\r\n            <form onSubmit={(e) => login(e)}>\r\n                <div className='div'>\r\n                    <input \r\n                        value={username}\r\n                        type='text'\r\n                        onChange={({target}) => setUsername(target.value)}\r\n                        required\r\n                        className='input'\r\n                    />\r\n                    <label className=\"label\" htmlFor=\"username\">\r\n                        <span className=\"span\">Username</span>\r\n                    </label>\r\n                </div>\r\n                <div className=\"div\">\r\n                    <input \r\n                        type='password'\r\n                        value={password}\r\n                        onChange={({target}) => setPassword(target.value)}\r\n                        required\r\n                        className='input'\r\n                    />\r\n                    <label className=\"label\" htmlFor=\"password\">\r\n                        <span className=\"span\">Password</span>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <button className='loginLinkButton' type=\"submit\">login</button>\r\n                </div>\r\n                <button onClick={() => navigate('/')} className='backButton'>back</button>\r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      user: state.user,\r\n      message: state.messageReducer\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = {\r\n    dispatchLogin,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginForm)","import axios from \"axios\"\r\n\r\nconst url ='/user/register'\r\n\r\nexport const registerUser = async ({username, password}) => {\r\n    let {data} = await axios.post(url, {username, password})\r\n    return data\r\n}\r\n\r\n\r\n// const baseUrl = 'http://localhost:3001/user/register'\r\n\r\n// export const registerUser = async ({username, password}) => {\r\n//     let {data} = await axios.post(baseUrl, {username, password})\r\n//     return data\r\n// }","const messageReducer = (state='', action) => {\r\n    switch(action.type){\r\n        case 'SETMESSAGE':\r\n            return action.message\r\n        case 'SETUSERMESSAGE':\r\n            return action.message\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SETMESSAGE',\r\n            message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const setUserMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: 'SETUSERMESSAGE',\r\n            message\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default messageReducer","import './registerForm.css'\r\nimport { useState } from \"react\"\r\nimport { useNavigate } from \"react-router-dom\"\r\nimport { registerUser } from '../requests/register'\r\nimport { setMessage } from '../reducers/messageReducer'\r\nimport { connect } from 'react-redux'\r\n\r\nconst RegisterForm = ({setMessage}) => {\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confPassword, setConfPassword] = useState('')\r\n    const navigate = useNavigate()\r\n\r\nconst register = async (e) => {\r\n\r\n    e.preventDefault()\r\n        if(password === confPassword){\r\n            let data = await registerUser({username, password})\r\n            if(!data){\r\n                setMessage('Username must be unique')\r\n                setTimeout(() => {\r\n                    setMessage('')\r\n                }, 5000)\r\n            }\r\n\r\n            setUsername('')\r\n            setPassword('')\r\n            setConfPassword('')\r\n            console.log(data)\r\n            if(data){\r\n                return navigate('/login')\r\n            }\r\n        }\r\n        setConfPassword('')\r\n} \r\n\r\n    return(\r\n        <div className='register'>\r\n            <h1>Register</h1>\r\n            <form className=\"registerForm\" onSubmit={(e) => register(e)} autoComplete='off'>\r\n                <div className='div'>\r\n                    <input \r\n                        className='input'\r\n                        value={username}\r\n                        type='text'\r\n                        name='username'\r\n                        onChange={({target}) => setUsername(target.value)}\r\n                        required\r\n                    />\r\n                    <label className='label'  htmlFor=\"username\">\r\n                        <span className='span'>Username</span>\r\n                    </label>\r\n                </div>\r\n                <div className='div'>\r\n                    <input \r\n                        className='input'\r\n                        type='password'\r\n                        name='password'\r\n                        value={password}\r\n                        onChange={({target}) => setPassword(target.value)}\r\n                        required\r\n                    />\r\n                    <label className='label' htmlFor=\"password\">\r\n                        <span className='span'>Password</span>\r\n                    </label>\r\n                </div>\r\n                <div className='div'>\r\n                    <input className='input'\r\n                        type='password'\r\n                        name='passwordConfirm'\r\n                        value={confPassword}\r\n                        onChange={({target}) => setConfPassword(target.value)}\r\n                        required\r\n                    />\r\n                    <label className='label' htmlFor=\"passwordConfirm\">\r\n                        <span className='span'>Confirm Password</span>\r\n                    </label>\r\n                </div>\r\n                <div>\r\n                    <button className='registerButton' type=\"submit\">register</button>\r\n                </div>\r\n            </form>\r\n            <button onClick={() => navigate('/login')} className='loginButton'>login</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    setMessage\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RegisterForm)","import axios from \"axios\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst url = '/contacts'\r\nexport const getAllContact = async ({token}) => {\r\n    let{data} = await axios.post(`${url}/all`,{token})\r\n    return data\r\n}\r\n\r\nexport const addContact = async ({name, number, token}) => {\r\n    let{data} = await axios.post(`${url}/add`,{name, number,token})\r\n    return data\r\n}\r\n\r\nexport const deleteRequest = async ({id, token}) => {\r\n    await axios.delete(url, {data: {id,token}})\r\n}\r\n\r\n\r\nexport const editRequest = async ({name,number,id}) => {\r\n    let {data} = await axios.post(`${url}/edit`, {name,number, id})\r\n    return data\r\n}\r\n\r\n\r\n\r\n///////\r\n\r\n\r\n// const baseUrl = 'http://localhost:3001/contacts'\r\n\r\n\r\n// export const getAllContact = async ({token}) => {\r\n//     let{data} = await axios.post(`${baseUrl}/all`,{token})\r\n//     return data\r\n// }\r\n\r\n// export const addContact = async ({name, number, token}) => {\r\n//     let{data} = await axios.post(`${baseUrl}/add`,{name, number,token})\r\n//     return data\r\n// }\r\n\r\n// export const deleteRequest = async ({id, token}) => {\r\n//     await axios.delete(baseUrl, {data: {id,token}})\r\n// }\r\n\r\n\r\n// export const editRequest = async ({name,number,id}) => {\r\n//     let {data} = await axios.post(`${baseUrl}/edit`, {name,number, id})\r\n//     return data\r\n// }","import { addContact, deleteRequest, editRequest, getAllContact } from \"../requests/contactRequests\"\r\n\r\nconst contactsReducer = (state = [], action) => {\r\n    switch(action.type){\r\n        case 'INIT':\r\n            return action.data\r\n        case 'ADD':\r\n            return [...state, action.data]\r\n        case 'EDIT':\r\n            if(!action.data){\r\n                window.localStorage.removeItem('user')\r\n                return state\r\n            }\r\n            let updatedContact = action.data\r\n            return state.map(mp => mp.id === action.data.id ? updatedContact : mp)        \r\n        case 'DELETE':\r\n            return state.filter(f => f.id !== action.id)\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const initContacts = ({token}) => {\r\n    return async (dispatch) => {\r\n        let data = await getAllContact({token})\r\n        dispatch({\r\n            type: 'INIT',\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nexport const addContactReducer = ({name,number,token}) => {\r\n    return async (dispatch) => {\r\n        let data = await addContact({name,number,token})\r\n        dispatch({\r\n            type: 'ADD',\r\n            data\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteContactReducer = ({id, token}) => {\r\n    return async (dispatch) => {\r\n        await deleteRequest({id, token})\r\n        dispatch({\r\n            type: 'DELETE',\r\n            id\r\n        })\r\n    }\r\n}\r\n\r\nexport const editContactReducer = (newContact) => {\r\n    return async (dispatch) => {\r\n        let succed = await editRequest(newContact)\r\n        \r\n        dispatch({\r\n            type: 'EDIT',\r\n            data: succed? newContact: false\r\n        })\r\n    }\r\n}\r\n\r\nexport default contactsReducer","import './loginForm.css'\r\nimport { useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { addContactReducer } from \"../reducers/contactsReducer\"\r\nimport { setMessage } from '../reducers/messageReducer'\r\n\r\n\r\n\r\nconst AddContactForm = ({add, setMessage}) => {\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('')\r\n\r\n    let userFromStorege = JSON.parse(window.localStorage.getItem('user'))\r\n\r\n    const addContact = (e) => {\r\n        e.preventDefault()\r\n            let resultName = name.match(/[\\d]/g)\r\n            let resultNums = number.match(/[\\D]/g)\r\n\r\n            if(resultNums || resultName){\r\n                setMessage('Name must be text and Number only Numbers')\r\n                setTimeout(() => {\r\n                    setMessage('')\r\n                }, 5000)\r\n                return\r\n            }\r\n\r\n            add({name, number, token: userFromStorege.token})\r\n\r\n        setName('')\r\n        setNumber('')\r\n    }\r\n\r\n    return (\r\n        <div className='addMain'>\r\n            <h2>Add Contact</h2>\r\n            <form onSubmit={(e) => addContact(e)}>\r\n                <div className='div'>\r\n                    <input\r\n                        value={name}\r\n                        onChange={({target}) => setName(target.value)}\r\n                        required\r\n                        type='text'\r\n                        autoComplete=\"off\"\r\n                        className='input'\r\n                    />\r\n                    <label className='label'>\r\n                        <span className='span'>Name</span>\r\n                    </label>\r\n                </div>\r\n                <div className='div'>\r\n                    <input\r\n                        value={number}\r\n                        onChange={({target}) => setNumber(target.value)}\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        className='input'\r\n                    />\r\n                    <label className='label'>\r\n                        <span className='span'>Number</span>\r\n                    </label>\r\n                </div>\r\n                <button className='addButton' type=\"submit\">Add</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    add: addContactReducer, setMessage\r\n}\r\n\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(AddContactForm)","import './phonebook.css'\r\nimport { useEffect, useState } from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { deleteContactReducer, editContactReducer, initContacts } from \"../reducers/contactsReducer\"\r\nimport AddContactForm from \"./addContactForm\"\r\nimport { setMessage } from '../reducers/messageReducer'\r\n\r\nconst Contacts = ({init, contacts, deleteContact, editContact, setMessage}) => {\r\n    const [search, setSearch] = useState('')\r\n    const [edit, setEdit] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [number, setNumber] = useState('')\r\n    useEffect(() => {\r\n        setMessage('')\r\n        let user = JSON.parse(window.localStorage.getItem('user'))\r\n        init({token: user.token})\r\n    }, [init, setMessage])\r\n    \r\n\r\n    let user = JSON.parse(window.localStorage.getItem('user'))\r\n\r\n    let contactsToShow = search.length > 0 && !search.match(/[\\d]/g)\r\n    ? contacts.filter(f => f.name.indexOf(search) >= 0)\r\n    : !search.match(/[\\D]/g)\r\n    ? contacts.filter(f => String(f.number).indexOf(search) >=0)\r\n    : contacts\r\n\r\n    const editFunc = ({id}) => {\r\n        let resultName = name.match(/[\\d]/g)\r\n        let resultNums = number.match(/[\\D]/g)\r\n\r\n        if(resultNums || resultName){\r\n            setMessage('Name must be text and Number only Numbers')\r\n            setTimeout(() => {\r\n                setMessage('')\r\n            }, 5000)\r\n            return\r\n        }\r\n\r\n        editContact({name, number, id})\r\n        setName('')\r\n        setNumber('')\r\n        setEdit('')\r\n    }\r\n    \r\n\r\n    return(\r\n        <div className=\"phonebook\">\r\n                <AddContactForm />\r\n            \r\n            <div className='contacts'>\r\n                <h2 style={{marginBottom: '10px'}}>Contacts</h2>\r\n            <div className='div'>\r\n                    <input \r\n                        value={search}\r\n                        type='text'\r\n                        onChange={({target}) => setSearch(target.value)}\r\n                        required\r\n                        className='input'\r\n                        autoComplete='off'\r\n                    />\r\n                    <label className=\"label\" htmlFor=\"username\">\r\n                        <span className=\"span\">search</span>\r\n                    </label>\r\n                </div>\r\n                {contactsToShow.map(mp => {\r\n                    if(edit === mp.id){\r\n                        return(\r\n                            <div key={mp.id} >\r\n                                \r\n                                <div className='div'>\r\n                                    <input \r\n                                        value={name}\r\n                                        onChange={({target}) => setName(target.value)}\r\n                                        required\r\n                                        type='text'\r\n                                        autoComplete=\"off\"\r\n                                        className='input'\r\n                                     />\r\n                                    <label className='label'>\r\n                                        <span className='span'>New username</span>\r\n                                    </label>\r\n                                </div>\r\n                                <div className='div'>\r\n                                <input\r\n                                    value={number}\r\n                                    onChange={({target}) => setNumber(target.value)}\r\n                                    required\r\n                                    autoComplete=\"off\"\r\n                                    className='input'\r\n                                />\r\n                                    <label className='label'>\r\n                                        <span className='span'>New number</span>\r\n                                    </label>\r\n                                </div>\r\n                                    <div style={{display: 'flex', justifyContent:'space-between', marginBottom:'10px', marginTop: '15px'}}>\r\n                                        <button \r\n                                        onClick={() => editFunc({id: mp.id})}\r\n                                        className='editButton'>edit</button>\r\n                                        <button className='cancelButton' onClick={() => setEdit('')}>Cancel</button>\r\n                                    </div>\r\n                            </div>\r\n                        )\r\n                    }else{\r\n                        return(\r\n                            <div key={mp.id}>\r\n    \r\n                                <p> {mp.name} - {mp.number}</p>\r\n                                <div style={{display: 'flex', justifyContent:'space-between'}}>\r\n                                 <button className='editButton' onClick={() => setEdit(mp.id)}>edit</button>\r\n                                 <button className='deleteButton' style={{cursor: 'pointer'}} onClick={() =>deleteContact({id: mp.id, token: user.token})}>X</button>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contactsReducer,\r\n        user: state.user\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    init: initContacts,\r\n    deleteContact: deleteContactReducer,\r\n    editContact: editContactReducer,\r\n    setMessage\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts)","import './App.css'\nimport { useEffect } from \"react\";\nimport {Routes, Route} from 'react-router-dom'\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/registerForm\";\nimport {connect} from 'react-redux'\nimport { dispatchLogin, dispatchLogout } from \"./reducers/userLogined\";\nimport Contacts from \"./components/contacts\";\n\n\n\nconst App = ({user, dispatchLogin, dispatchLogout, message}) => {\nuseEffect(() => {\n  let userFromStorage = JSON.parse(window.localStorage.getItem('user'))\n  if(userFromStorage){\n    dispatchLogin({token:userFromStorage.token})\n  }\n}, [dispatchLogin,user])\n\n\n  return(\n    <div>\n      {message? <div className='message'> \n        <h3 className='messageText'>{message}</h3>\n      </div>:\n      null}\n      <header>\n        <h1 style={{color: 'rgb(133, 29, 127)'}}>Phonebook</h1>\n      </header>\n        {user\n        ? <div>\n          <button \n          onClick={dispatchLogout} \n          style={{float:'right', marginRight:'100px'}}>Log out</button>\n            <div style={{display: 'flex', justifyContent:'center'}}>\n              <Contacts />\n            </div>\n          </div>\n        : <div className=\"user\">\n            <Routes>\n               <Route path='/login' element={<LoginForm forMessage={true} />} />\n               <Route path='/' element={<RegisterForm />} />\n          </Routes>\n          </div>}\n    </div>\n  )\n} \n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n    message: state.messageReducer\n  }\n}\n\nconst mapDispatchToPtops = {\n  dispatchLogin, dispatchLogout\n}\n\nexport default connect(mapStateToProps, mapDispatchToPtops)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\nimport contactsReducer from './reducers/contactsReducer'\r\nimport user from './reducers/userLogined'\r\nimport messageReducer from './reducers/messageReducer'\r\nconst reducers = combineReducers({\r\n    contactsReducer,\r\n    user,\r\n    messageReducer\r\n})\r\n\r\nconst store = createStore(\r\n    reducers,\r\n    composeWithDevTools(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux'\nimport {BrowserRouter} from 'react-router-dom'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}